extends layout
block content
    style.
        html{
            height: 100%;
        }
        body{
            height: 100%;
        }
        #map{
            height: 60%;
            width: 100%;
            margin-top: 15px;
        }
        .bold{
            font-weight: bold;    
        }
        .container{
            height: 100%;
        }
        #chartWrapper{
            height: 20%;
            width: 100%;
        }
        #trackChart{
            height: 100%;
            width: 100%;
            margin:auto;
            text-align:center;
        }
        #splitButton{
            float: right;
        }
    script.
        $(window).resize(function(){
            drawChart($("input:radio[name ='chartType']:checked").val());
            map.fitBounds(bounds);
        });
        $(document).ready(function(){
            $('input[type=radio][name=chartType]').change(function(){
                type = this.value;
                drawChart(type);
            });
            markersPosition = !{JSON.stringify(trackDetails.points)};
            markers = new Array();
            for(i=0;i<markersPosition.length; i++){
                var position = new google.maps.LatLng(markersPosition[i].lat, markersPosition[i].lon);
                var marker = new google.maps.Marker({
                    position: position,
                });
                markers.push(marker);
            }
        }); 
        $(function(){
            $("input").checkboxradio({
                icon: false
            });
        });
        var splitIndex;
        google.charts.load('current', {packages: ['corechart']});
        google.charts.setOnLoadCallback(drawChart);
        function drawChart(type){
            if(type == '' || type == null || type == 'time'){    
                data = new google.visualization.arrayToDataTable(!{timeDataSet});
                var formatter = new google.visualization.DateFormat({pattern: 'HH:mm'});
                formatter.format(data, 0);
                var options = {
                    title: 'Track Speed & Altitude by Time',
                    colors: ['blue', 'green'],
                    hAxis: {title: 'Time',  titleTextStyle: {color: '#333'}, format: 'HH:mm'},
                    series: {
                        0: {targetAxisIndex:0},
                        1: {targetAxisIndex:1}
                    },
                    vAxes: {
                        0: {title: 'MPH', minValue: 0},
                        1: {title: 'Feet', minValue: 0}
                    },
                    legend: {position: 'in'},
                    chartArea:{left:0, top:0, width: "100%", height: "100%"}
                };
            }
            else if(type == 'distance'){
                data = new google.visualization.arrayToDataTable(!{distDataSet});
                var options = {
                    title: 'Track Speed & Altitude by Distance',
                    colors: ['blue', 'green'],
                    hAxis: {title: 'Distance',  titleTextStyle: {color: '#333'}},
                    series: {
                        0: {targetAxisIndex:0},
                        1: {targetAxisIndex:1}
                    },
                    vAxes: {
                        0: {title: 'MPH', minValue: 0},
                        1: {title: 'Feet', minValue: 0}
                    },
                    legend: {position: 'in'},
                    chartArea:{left:0, top:0, width: "100%", height: "100%"}
                };
            }
            var trackChart = new google.visualization.AreaChart(document.getElementById('trackChart'));
            trackChart.draw(data, options);

            google.visualization.events.addListener(trackChart, 'select', function() {
                var selection = trackChart.getSelection();
                splitTrack = #{trackDetails.trackName};
                splitIndex = selection[0].row;
                $('#splitButton').removeClass('disabled').attr('href', '/split?track=' + splitTrack + '&index=' + splitIndex);

            });
            google.visualization.events.addListener(trackChart, 'onmouseover', function(e) {
                showMarker(data, e.row);
            });
            google.visualization.events.addListener(trackChart, 'onmouseout', function(e) {
                hideMarker(data, e.row);
            });
        }

        function showMarker(data, row) {
            if (row != null) {
                markers[row].setMap(map);
            }
        }

        function hideMarker(data, row) {
            if (row != null) {
                markers[row].setMap(null);
            }
        }

        var bounds;

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                mapTypeId: 'terrain'

            });

            var markers = #{trackDetails.latLon};
            bounds = new google.maps.LatLngBounds();
            for(i=0;i<markers.length;i++) {
                bounds.extend(markers[i]);
            }

            map.setCenter(bounds.getCenter());
            map.fitBounds(bounds);

            var startMarker = new google.maps.Marker({
                    position: #{trackDetails.trackStart},
                    map: map,
                    title: 'Start',
                    label: 'A'
                });

            var endMarker = new google.maps.Marker({
                    position: #{trackDetails.trackEnd},
                    map: map,
                    title: 'End',
                    label: 'B'
                });

            var trackCoordinates = #{trackDetails.latLon};

            var trackPath = new google.maps.Polyline({
                path: trackCoordinates,
                geodesic: false,
                strokeColor: '#FF0000',
                strokeOpacity: 1.0,
                strokeWeight: 2
            });

            /*
            google.maps.event.addListener(trackPath, 'click', function(e) {
                alert('you clicked ' + e.latLng);
             });
            */

            trackPath.setMap(map);
        }

    body
        .container
            a(href="/" role='button').btn.btn-primary 
                <span class="glyphicon glyphicon-arrow-left"></span> <span>Tracks</span>
            h2 #{trackDetails.dateString.replace(/:00 GMT.*/, '')} - #{trackDetails.type}
            span.font-weight-bold Plot speed and altitude by: &nbsp;
            label(for='radio-1') Time
            input(id="radio-1", type="radio", name="chartType", value="time" checked="checked")
            label(for='radio-2') Distance
            input(id="radio-2", type="radio", name="chartType", value="distance")
            a(href="/split" role='button' id="splitButton").btn.btn-primary.disabled
                span Split
            .row
                .col-md-3
                    p 
                        span.font-weight-bold Total Distance: 
                        | #{trackDetails.totalDistance}
                .col-md-3
                    p 
                        span.font-weight-bold Max Speed: 
                        | #{trackDetails.maxSpeed} MPH
                .col-md-3
                    p 
                        span.font-weight-bold Average Speed: 
                        | #{trackDetails.avgSpeed}
                .col-md-3
                    p 
                        span.font-weight-bold Moving Average: 
                        | #{trackDetails.movingAvg}
            .row
                .col-md-3
                    p 
                        span.font-weight-bold Elapsed Time: 
                        | #{trackDetails.elapsedTime}
                .col-md-3
                    p 
                        span.font-weight-bold Moving Time: 
                        | #{trackDetails.movingTime}
                .col-md-3
                    p &nbsp;
                .col-md-3
                    p &nbsp;
            div(id="chartWrapper")
                div(id="trackChart")
            div(id="map")
    script(src!='https://maps.googleapis.com/maps/api/js?key=' + mapApiKey +'&callback=initMap')
